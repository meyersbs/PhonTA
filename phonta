#!/usr/bin/python

#################################################################################
# @PROJECT: PhonTA - Phonetic Transcription Assistant                           #
# @VERSION:                                                                     #
# @AUTHOR: Benjamin Meyers                                                      #
# @EMAIL: ben@lionlogic.org                                                     #
# @LICENSE: MIT                                                                 #
#################################################################################

##### IMPORTS ###################################################################
import sys
from lib.phonta_functions import update_cmudict, translate

##### GLOBALS ###################################################################
commands = {"update":update_cmudict,	"translate":translate}

def display_help_message():
	print("USAGE: phonta <command> <options>")
	print("\t--help,  -h\tDisplay this message.")
	print("\t--info,  -i\tDiplay program information.")
	print("\t--usage, -u\tDisplay usage instructions.")

def display_info_message():
	print("\n")
	print("#################################################")
	print("# PhonTA - Phonetic Transcription Assistant\t#")
	print("#\t\t\t\t\t\t#")
	print("# Copyright (c) 2016,   Benjamin S. Meyers\t#")
	print("# \t\t\tben@lionlogic.org\t#")
	print("#################################################")
	print("\n")

def display_usage_message():
	print("COMMAND\t\tARG\t\tDESCRIPTION")
	print("translate\ttext\t\tTranslate the text to ARPABET and IPA.")
	print("update\t\tcmudict\t\tUpdate the IPA in the cmudict.")

def run_command(args):
	command = args[1]
	print(args)
	if command not in commands.keys():
		sys.exit("WARNING: Invalid command. Try '--help' for details.")
	elif len(args) == 3: # phonta <command> <option>
		print(commands[command](args[2]))

def main():
	args = sys.argv
	if "python" in args:
		args.remove("python")

	if len(args) < 2:
		print("HELP")
	elif len(args) == 2:
		if args[1] == "--help" or args[1] == "-h":
			display_help_message()
		elif args[1] == "--info" or args[1] == "-i":
			display_info_message()
		elif args[1] == "--usage" or args[1] == "-u":
			display_usage_message()
	else:
		run_command(args)

if __name__ == "__main__":
	main()
